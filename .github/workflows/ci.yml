name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore CampusConnect.Server.Tests/CampusConnect.Server.Tests.csproj
    
    - name: Build
      run: dotnet build CampusConnect.Server.Tests/CampusConnect.Server.Tests.csproj --no-restore
    
    - name: Run Unit Tests
      run: dotnet test CampusConnect.Server.Tests/CampusConnect.Server.Tests.csproj --no-build --verbosity normal --filter "FullyQualifiedName!~Integration"

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: campusconnect.client/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: campusconnect.client
    
    - name: Run Angular tests
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      working-directory: campusconnect.client

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: CampusConnect.E2E.Tests/package-lock.json
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Install E2E dependencies
      run: npm ci
      working-directory: CampusConnect.E2E.Tests
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      working-directory: CampusConnect.E2E.Tests
    
    - name: Install frontend dependencies
      run: npm ci
      working-directory: campusconnect.client
    
    - name: Build backend
      run: dotnet build CampusConnect.Server/CampusConnect.Server.csproj
    
    - name: Start backend
      run: dotnet run --project CampusConnect.Server/CampusConnect.Server.csproj &
      env:
        ASPNETCORE_ENVIRONMENT: Development
    
    - name: Wait for backend
      run: sleep 10
    
    - name: Start frontend
      run: npm start &
      working-directory: campusconnect.client
    
    - name: Wait for frontend
      run: sleep 15
    
    - name: Run E2E tests
      run: npm test
      working-directory: CampusConnect.E2E.Tests
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: CampusConnect.E2E.Tests/playwright-report/